params {
    executor = "local"
    error_strategy = "ignore"
    
    version = "0.2.0"

    // General parameters for TWIST and ARTIC

    outdir = "mpxv_consensus"

    deplete_host = false
    host_index = "chm13v2_sr.mmi"

    deplete_min_cov = 0.5
    deplete_min_mapq = 0
    deplete_min_len = 50

    // ONT ingestion of multiple run directories
    // located in base_dir

    base_dir = null 

    // TWIST AND ARTIC parameters to be set 
    // in specific profiles

    params.fastq_dir = null
    params.sample_sheet = null
    params.reference = null
    params.ivar_min_qual = null
    params.ivar_min_depth = null
    params.ivar_fill_char = null
    params.ivar_mpileup_args = null 
    params.ivar_mpileup_max_depth = null
    params.ivar_ref_gff = null
    params.fastq_ext = null
    params.fastq_gather = null
    params.fastq_id = null
    params.barcodes = null
    params.scheme_dir = null
    params.min_length = null
    params.max_length = null
    params.min_quality = null
    params.normalise = null
    params.medaka_model = null
    params.medaka_min_depth = null
    params.report_title = null

    // Conda handlers

    mamba = false
    micromamba = false

    // Resource configs

    fastp_cpus = 16
    fastp_mem = "32GB"
    fastp_time = "8h"

    minimap2_cpus = 32
    minimap2_mem = "64GB"
    minimap2_time = "8h"

    ivar_cpus = 1
    ivar_mem = "32GB"
    ivar_time = "12h"

    coverage_cpus = 32
    coverage_mem = "32GB"
    coverage_time = "2h"

    artic_gather_cpus = 1
    artic_gather_mem = "32GB"
    artic_gather_time = "1h"

    artic_minion_cpus = 2
    artic_minion_mem = "32GB"
    artic_minion_time = "1h"

    artic_covtobed_cpus = 1
    artic_covtobed_mem = "32GB"
    artic_covtobed_time = "1h"

    artic_report_cpus = 1
    artic_report_mem = "16GB"
    artic_report_time = "1h"

    minimap2_host_cpus = 32
    minimap2_host_mem = "64GB"
    minimap2_host_time = "24h"
    
    mgp_tools_cpus = 1
    mgp_tools_mem = "32GB"
    mgp_tools_time = "8h"


}

profiles {
  conda {
      conda.useMamba = params.mamba
      conda.useMicromamba = params.micromamba
  }
  twist {

        process.conda                    = "$baseDir/modules/mpxv/envs/mpxv.yml"

        params.fastq_dir                 = null
        params.sample_sheet              = null

        params.reference                 = "$baseDir/refs/mpx_rivers_18.fasta"

        params.ivar_min_qual             = 20
        params.ivar_min_depth            = 10
        params.ivar_fill_char            = "N"
        params.ivar_mpileup_args         = ""  
        params.ivar_mpileup_max_depth    = 10000
        params.ivar_ref_gff              = "$baseDir/refs/mpx_rivers_18.gff3"
  }
  artic {
        
        process.conda          = "$baseDir/modules/artic/envs/artic.yml"

        params.base_dir        = null
        params.fastq_dir       = null
        params.sample_sheet    = null
        params.fastq_ext       = null

        params.scheme_dir      = "$baseDir/schemes/MPXV/V1"

        params.min_length       = 200
        params.max_length       = 2500
        params.min_quality      = 0
        params.normalise        = 10000
        params.medaka_model     = "r941_min_hac_variant_g507"
        params.medaka_min_depth = 20

        params.report_title    = "MPXV Report"
  }
  ont {
        
        process.conda                    = "$baseDir/modules/ont/envs/ont.yml"

        params.base_dir                  = null
        params.fastq_dir                 = null
        params.sample_sheet              = null
        params.fastq_ext                 = null

        params.scheme_dir                = "$baseDir/schemes/MPXV/V1"

        params.min_length                = 200
        params.max_length                = 2500
        params.min_quality               = 0
        
        params.reference                 = "$baseDir/refs/mpx_us_22.fasta"  // must be us to be compliant with primer scheme 

        params.ivar_min_qual             = 20
        params.ivar_min_depth            = 10
        params.ivar_fill_char            = "N"
        params.ivar_mpileup_args         = ""  
        params.ivar_mpileup_max_depth    = 10000
        params.ivar_ref_gff              = "$baseDir/refs/mpx_us_22.gff3"
  }
}

process {
    
    errorStrategy = params.error_strategy

    executor = params.executor

    withLabel: fastp {
        cpus = params.fastp_cpus
        memory = params.fastp_mem
        time = params.fastp_time
    }

    withLabel: minimap2 {
        cpus = params.minimap2_cpus
        memory = params.minimap2_mem
        time = params.minimap2_time
    }

    withLabel: minimap2_host {
        cpus = params.minimap2_host_cpus
        memory = params.minimap2_host_mem
        time = params.minimap2_host_time
    }

    withLabel: ivar {
        cpus = params.ivar_cpus
        memory = params.ivar_mem
        time = params.ivar_time
    }

    withLabel: mgp_tools {
        cpus = params.mgp_tools_cpus
        memory = params.mgp_tools_mem
        time = params.mgp_tools_time
    }

    withLabel: coverage {
        cpus = params.coverage_cpus
        memory = params.coverage_mem
        time = params.coverage_time
    }

    withLabel: artic_gather {
        cpus = params.artic_gather_cpus
        memory = params.artic_gather_mem
        time = params.artic_gather_time
    }
    withLabel: artic_minion {
        cpus = params.artic_minion_cpus
        memory = params.artic_minion_mem
        time = params.artic_minion_time
    }
    withLabel: artic_covtobed {
        cpus = params.artic_covtobed_cpus
        memory = params.artic_covtobed_mem
        time = params.artic_covtobed_time
    }
    withLabel: artic_report {
        cpus = params.artic_report_cpus
        memory = params.artic_report_mem
        time = params.artic_report_time
    }

}
